local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not vim.loop.fs_stat(lazypath) then
  vim.fn.system({
    "git",
    "clone",
    "--filter=blob:none",
    "https://github.com/folke/lazy.nvim",
    "--branch=stable",
    lazypath,
  })
end
vim.opt.rtp:prepend(lazypath)

require("lazy").setup({
  "w0rp/ale",
  {
    "neoclide/coc.nvim",
    branch = 'release'
  },
  {
    "sonph/onehalf",
    lazy = false,
    priority = 1000,
    config = function(plugin)
      vim.opt.rtp:append(plugin.dir .. "/vim")
      vim.cmd.colorscheme("onehalflight")
    end
  },
  {
    "nvim-treesitter/nvim-treesitter",
    build = ":TSUpdate"
  },
  "embear/vim-localvimrc",
  "honza/vim-snippets",
  "junegunn/vim-peekaboo",
  "nvim-lualine/lualine.nvim",
  "kana/vim-textobj-user",
  "mbbill/undotree",
  "wellle/targets.vim",
  "tommcdo/vim-exchange",
  "tpope/vim-abolish",
  "tpope/vim-commentary",
  "tpope/vim-endwise",
  "tpope/vim-eunuch",
  "tpope/vim-fugitive",
  "tpope/vim-projectionist",
  "tpope/vim-repeat",
  "tpope/vim-rsi",
  "tpope/vim-surround",
  "tpope/vim-unimpaired",
  "nvim-lua/plenary.nvim",
  {
    "nvim-telescope/telescope.nvim",
    tag = "0.1.1",
    dependencies = {
      "nvim-lua/plenary.nvim"
    }
  },
  {
    "nvim-telescope/telescope-fzf-native.nvim",
    build = "make",
    dependencies = {
      "nvim-telescope/telescope.nvim"
    }
  },
  {
    "elixir-lang/vim-elixir",
    ft = "elixir"
  },
  {
    "nelstrom/vim-textobj-rubyblock",
    ft = "ruby",
    dependencies = {
      "kana/vim-textobj-user"
    }
  },
  {
    "tpope/vim-bundler",
    ft = "ruby"
  },
  {
    "tpope/vim-rails",
    ft = "ruby"
  }
})

{# vim:set filetype=lua: #}
